plugin_option(PLUGIN_TAPE "Tape usage statistics" ON)

set(BUILD_PLUGIN_TAPE 0)

if(PLUGIN_TAPE)
    if(BUILD_LINUX)
        set(BUILD_PLUGIN_TAPE 1)
    elseif(BUILD_AIX)
        find_package(LibPerfstat)
        if(LIBPERFSTAT_FOUND)
            set(BUILD_PLUGIN_TAPE 1)
        else()
            set(BUILD_PLUGIN_TAPE_REASON "perfstat not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_SOLARIS)
        find_package(LibKstat)
        if(LIBKSTAT_FOUND)
            check_struct_has_member("kstat_io_t" nwritten "kstat.h" HAVE_KSTAT_IO_T_NWRITTEN)
            check_struct_has_member("kstat_io_t" writes   "kstat.h" HAVE_KSTAT_IO_T_WRITES)
            check_struct_has_member("kstat_io_t" nwrites  "kstat.h" HAVE_KSTAT_IO_T_NWRITES)
            check_struct_has_member("kstat_io_t" wtime    "kstat.h" HAVE_KSTAT_IO_T_WTIME)
            set(BUILD_PLUGIN_TAPE 1)
        else()
            set(BUILD_PLUGIN_TAPE_REASON "kstat not found" PARENT_SCOPE)
        endif()
    else()
        set(BUILD_PLUGIN_TAPE_REASON "unsupported system" PARENT_SCOPE)
    endif()
endif()

set(BUILD_PLUGIN_TAPE ${BUILD_PLUGIN_TAPE} PARENT_SCOPE)

if(BUILD_PLUGIN_TAPE)
    set(PLUGIN_TAPE_SRC tape.c)
    set(PLUGIN_TAPE_LIBS libutils libmetric)

    if(BUILD_LINUX)
        list(APPEND PLUGIN_TAPE_SRC tape_linux.c)
    elseif(BUILD_AIX)
        list(APPEND PLUGIN_TAPE_SRC tape_aix.c)
        list(APPEND PLUGIN_TAPE_LIBS LibPerfstat::LibPerfstat)
    elseif(BUILD_SOLARIS)
        if(HAVE_KSTAT_IO_T_NWRITTEN)
            list(APPEND PLUGIN_TAPE_DEFINITIONS HAVE_KSTAT_IO_T_NWRITTEN)
        endif()
        if(HAVE_KSTAT_IO_T_WRITES)
            list(APPEND PLUGIN_TAPE_DEFINITIONS HAVE_KSTAT_IO_T_WRITES)
        endif()
        if(HAVE_KSTAT_IO_T_NWRITES)
            list(APPEND PLUGIN_TAPE_DEFINITIONS HAVE_KSTAT_IO_T_NWRITES)
        endif()
        if(HAVE_KSTAT_IO_T_WTIME)
            list(APPEND PLUGIN_TAPE_DEFINITIONS HAVE_KSTAT_IO_T_WTIME)
        endif()
        list(APPEND PLUGIN_TAPE_SRC tape_solaris.c)
        list(APPEND PLUGIN_TAPE_LIBS LibKstat::LibKstat)
    endif()

    add_library(tape MODULE ${PLUGIN_TAPE_SRC})
    target_link_libraries(tape PRIVATE ${PLUGIN_TAPE_LIBS})
    target_compile_definitions(tape PUBLIC ${PLUGIN_TAPE_DEFINITIONS})
    set_target_properties(tape PROPERTIES PREFIX "")
    install(TARGETS tape DESTINATION ${CMAKE_INSTALL_LIBDIR}/ncollectd/)
    configure_file(ncollectd-tape.5 ncollectd-tape.5 @ONLY)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ncollectd-tape.5 DESTINATION ${CMAKE_INSTALL_MANDIR}/man5)
endif()
