plugin_option(PLUGIN_DF "Filesystem usage statistics" ON)

set(BUILD_PLUGIN_DF 0)

if(PLUGIN_DF)
    if(HAVE_GETVFSSTAT OR HAVE_GETFSSTAT)
        set(BUILD_PLUGIN_DF 1)
    elseif(HAVE_TWO_GETMNTENT OR HAVE_GEN_GETMNTENT OR HAVE_SUN_GETMNTENT)
        set(BUILD_PLUGIN_DF 1)
    elseif(HAVE_ONE_GETMNTENT)
        set(BUILD_PLUGIN_DF 1)
    elseif(HAVE_GETMNTENT_R)
        set(BUILD_PLUGIN_DF 1)
    else()
        set(BUILD_PLUGIN_DF_REASON "unsupported system" PARENT_SCOPE)
    endif()

    if(BUILD_PLUGIN_DF)
        set(BUILD_PLUGIN_DF 0)
        if(HAVE_STATFS)
            set(BUILD_PLUGIN_DF 1)
        endif()
        if(HAVE_STATVFS)
            set(BUILD_PLUGIN_DF 1)
        endif()
        if(NOT BUILD_PLUGIN_DF)
            set(BUILD_PLUGIN_DF_REASON "not found statfs or statvfs" PARENT_SCOPE)
        endif()
    endif()
endif()

set(BUILD_PLUGIN_DF ${BUILD_PLUGIN_DF} PARENT_SCOPE)

if(BUILD_PLUGIN_DF)
    set(PLUGIN_DF_SRC df.c)
    add_library(df MODULE ${PLUGIN_DF_SRC})
    target_link_libraries(df PRIVATE libutils libmetric)
    set_target_properties(df PROPERTIES PREFIX "")

#    add_executable(test_plugin_df EXCLUDE_FROM_ALL df_test.c ${PLUGIN_DF_SRC})
#    target_link_libraries(test_plugin_df libtest libutils libmetric -lm)
#    add_dependencies(build_tests test_plugin_df)
#    add_test(NAME test_plugin_df COMMAND test_plugin_df WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})

    install(TARGETS df DESTINATION ${CMAKE_INSTALL_LIBDIR}/ncollectd/)
    configure_file(ncollectd-df.5 ncollectd-df.5 @ONLY)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ncollectd-df.5 DESTINATION ${CMAKE_INSTALL_MANDIR}/man5)
endif()
