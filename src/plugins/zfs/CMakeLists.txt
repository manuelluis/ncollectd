plugin_option(PLUGIN_ZFS "ZFS statistics" ON)

set(BUILD_PLUGIN_ZFS 0)

if(PLUGIN_ZFS)
    if(BUILD_LINUX)
        set(BUILD_PLUGIN_ZFS 1)
    elseif(BUILD_FREBSD)
        set(BUILD_PLUGIN_ZFS 0)
    elseif(BUILD_SOLARIS)
        find_package(LibKstat)
        if(LIBKSTAT_FOUND)
            set(BUILD_PLUGIN_ZFS 0)
        else()
            set(BUILD_PLUGIN_ZFS_REASON "kstat not found" PARENT_SCOPE)
        endif()
    else()
        set(BUILD_PLUGIN_ZFS_REASON "unsupported system" PARENT_SCOPE)
    endif()
endif()

set(BUILD_PLUGIN_ZFS ${BUILD_PLUGIN_ZFS} PARENT_SCOPE)

if(BUILD_PLUGIN_ZFS)
    set(PLUGIN_ZFS_SRC zfs.c zfs_flags.h zfs_fam.c zfs_fam.h)
    set(PLUGIN_ZFS_LIBS libutils libmetric)

    if(BUILD_LINUX)
        gperf_generate(zfs_stats.gperf "${CMAKE_CURRENT_BINARY_DIR}/zfs_stats.h" ZFS_STATS_H)
        list(APPEND PLUGIN_ZFS_SRC zfs_linux.c "${ZFS_STATS_H}")
    elseif(BUILD_FREBSD)
        list(APPEND PLUGIN_ZFS_SRC zfs_freebsd.c)
        list(APPEND PLUGIN_ZFS_LIBS m)
    elseif(BUILD_SOLARIS)
        list(APPEND PLUGIN_ZFS_SRC zfs_solaris.c)
        list(APPEND PLUGIN_ZFS_LIBS LibKstat::LibKstat)
    endif()

    add_library(zfs MODULE ${PLUGIN_ZFS_SRC})
    target_link_libraries(zfs PRIVATE ${PLUGIN_ZFS_LIBS})
    set_target_properties(zfs PROPERTIES PREFIX "")

#    add_executable(test_plugin_zfs EXCLUDE_FROM_ALL zfs_test.c ${PLUGIN_ZFS_SRC})
#    target_link_libraries(test_plugin_zfs libtest libutils libmetric -lm)
#    add_dependencies(build_tests test_plugin_zfs)
#    add_test(NAME test_plugin_zfs COMMAND test_plugin_zfs WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})

    install(TARGETS zfs DESTINATION ${CMAKE_INSTALL_LIBDIR}/ncollectd/)
    configure_file(ncollectd-zfs.5 ncollectd-zfs.5 @ONLY)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ncollectd-zfs.5 DESTINATION ${CMAKE_INSTALL_MANDIR}/man5)
endif()
