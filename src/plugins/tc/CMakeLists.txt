plugin_option(PLUGIN_TC "Traffic Control statistics" ON)

include(CheckIncludeFile)
include(CheckEnumExists)

set(BUILD_PLUGIN_TC 0)

if(PLUGIN_TC)
    find_package(LibMnl)
    if(BUILD_LINUX)
        if(LIBMNL_FOUND)
            check_include_file(linux/gen_stats.h HAVE_LINUX_GEN_STATS_H)
            check_include_file(linux/pkt_sched.h HAVE_LINUX_PKT_SCHED_H)
            check_enum_exists(TCA_STATS linux/rtnetlink.h HAVE_TCA_STATS)
            check_enum_exists(TCA_STATS2 linux/rtnetlink.h HAVE_TCA_STATS2)
            set(BUILD_PLUGIN_TC 1)
        else()
            set(BUILD_PLUGIN_TC_REASON "libmnl not found" PARENT_SCOPE)
        endif()
    else()
        set(BUILD_PLUGIN_TC_REASON "Linux only" PARENT_SCOPE)
    endif()
endif()

set(BUILD_PLUGIN_TC ${BUILD_PLUGIN_TC} PARENT_SCOPE)

if(BUILD_PLUGIN_TC)
    set(PLUGIN_TC_SRC tc.c)
    add_library(tc MODULE ${PLUGIN_TC_SRC})

    if(HAVE_LINUX_GEN_STATS_H)
        target_compile_definitions(tc PUBLIC HAVE_LINUX_GEN_STATS_H)
    endif()
    if(HAVE_LINUX_PKT_SCHED_H)
        target_compile_definitions(tc PUBLIC HAVE_LINUX_PKT_SCHED_H)
    endif()
    if(HAVE_TCA_STATS)
        target_compile_definitions(tc PUBLIC HAVE_TCA_STATS)
    endif()
    if(HAVE_TCA_STATS2)
        target_compile_definitions(tc PUBLIC HAVE_TCA_STATS2)
    endif()

    target_link_libraries(tc PRIVATE libutils libmetric LibMnl::LibMnl)
    set_target_properties(tc PROPERTIES PREFIX "")

#    add_executable(test_plugin_tc EXCLUDE_FROM_ALL tc_test.c ${PLUGIN_TC_SRC})
#    target_link_libraries(test_plugin_tc libtest libutils libmetric -lm)
#    add_dependencies(build_tests test_plugin_tc)
#    add_test(NAME test_plugin_tc COMMAND test_plugin_tc WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})

    install(TARGETS tc DESTINATION ${CMAKE_INSTALL_LIBDIR}/ncollectd/)
    configure_file(ncollectd-tc.5 ncollectd-tc.5 @ONLY)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ncollectd-tc.5 DESTINATION ${CMAKE_INSTALL_MANDIR}/man5)
endif()
