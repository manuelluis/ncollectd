plugin_option(PLUGIN_DISK "Disk usage statistics" ON)

include(CheckStructHasMember)

set(BUILD_PLUGIN_DISK 0)

if(PLUGIN_DISK)
    if(BUILD_LINUX)
        find_package(LibUdev)
        set(BUILD_PLUGIN_DISK 1)
    elseif(BUILD_FREEBSD)
        find_package(LibGeom)
        set(BUILD_PLUGIN_DISK 1)
    elseif(BUILD_NETBSD)
        find_package(LibKvm)
        set(BUILD_PLUGIN_DISK 1)
    elseif(BUILD_AIX)
        find_package(LibPerfstat)
        if(LIBPERFSTAT_FOUND)
            set(BUILD_PLUGIN_DISK 1)
        else()
            set(BUILD_PLUGIN_DISK_REASON "perfstat not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_SOLARIS)
        find_package(LibKstat)
        if(LIBKSTAT_FOUND)
            check_struct_has_member("kstat_io_t" nwritten "kstat.h" HAVE_KSTAT_IO_T_NWRITTEN)
            check_struct_has_member("kstat_io_t" writes   "kstat.h" HAVE_KSTAT_IO_T_WRITES)
            check_struct_has_member("kstat_io_t" nwrites  "kstat.h" HAVE_KSTAT_IO_T_NWRITES)
            check_struct_has_member("kstat_io_t" wtime    "kstat.h" HAVE_KSTAT_IO_T_WTIME)
            set(BUILD_PLUGIN_DISK 1)
        else()
            set(BUILD_PLUGIN_DISK_REASON "kstat not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_DARWIN)
        find_package(LibIokit)
        if(LIBIOKIT_FOUND)
            set(BUILD_PLUGIN_DISK 1)
        else()
            set(BUILD_PLUGIN_DISK_REASON "libiokit not found" PARENT_SCOPE)
        endif()
    else()
        set(BUILD_PLUGIN_DISK_REASON "unsupported system" PARENT_SCOPE)
    endif()
endif()

set(BUILD_PLUGIN_DISK ${BUILD_PLUGIN_DISK} PARENT_SCOPE)

if(BUILD_PLUGIN_DISK)
    set(PLUGIN_DISK_SRC disk.c)
    set(PLUGIN_DISK_LIBS libutils libmetric)

    if(BUILD_LINUX)
        list(APPEND PLUGIN_DISK_SRC disk_linux.c)
        if (LIBUDEV_FOUND)
            list(APPEND PLUGIN_DISK_LIBS LibUdev::LibUdev)
        endif()
    elseif(BUILD_FREEBSD)
        list(APPEND PLUGIN_DISK_SRC disk_freebsd.c)
        list(APPEND PLUGIN_DISK_LIBS devstat LibGeom::LibGeom)
    elseif(BUILD_NETBSD)
        list(APPEND PLUGIN_DISK_SRC disk_netbsd.c)
        if (LIBKVMGETPROCS_FOUND)
            list(APPEND PLUGIN_DISK_LIBS LibKvm::LibKvm)
        endif()
    elseif(BUILD_AIX)
        list(APPEND PLUGIN_DISK_SRC disk_aix.c)
        list(APPEND PLUGIN_DISK_LIBS LibPerfstat::LibPerfstat)
    elseif(BUILD_SOLARIS)
        if(HAVE_KSTAT_IO_T_NWRITTEN)
            list(APPEND PLUGIN_DISK_DEFINITIONS HAVE_KSTAT_IO_T_NWRITTEN)
        endif()
        if(HAVE_KSTAT_IO_T_WRITES)
            list(APPEND PLUGIN_DISK_DEFINITIONS HAVE_KSTAT_IO_T_WRITES)
        endif()
        if(HAVE_KSTAT_IO_T_NWRITES)
            list(APPEND PLUGIN_DISK_DEFINITIONS HAVE_KSTAT_IO_T_NWRITES)
        endif()
        if(HAVE_KSTAT_IO_T_WTIME)
            list(APPEND PLUGIN_DISK_DEFINITIONS HAVE_KSTAT_IO_T_WTIME)
        endif()
        list(APPEND PLUGIN_DISK_SRC disk_solaris.c)
        list(APPEND PLUGIN_DISK_LIBS LibKstat::LibKstat)
    elseif(BUILD_DARWIN)
        list(APPEND PLUGIN_DISK_SRC disk_darwin.c)
        list(APPEND PLUGIN_DISK_LIBS LibIokit::LibIokit)
    endif()

    add_library(disk MODULE ${PLUGIN_DISK_SRC})
    target_link_libraries(disk PRIVATE ${PLUGIN_DISK_LIBS})
    target_compile_definitions(disk PUBLIC ${PLUGIN_DISK_DEFINITIONS})
    set_target_properties(disk PROPERTIES PREFIX "")
    install(TARGETS disk DESTINATION ${CMAKE_INSTALL_LIBDIR}/ncollectd/)
    configure_file(ncollectd-disk.5 ncollectd-disk.5 @ONLY)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ncollectd-disk.5 DESTINATION ${CMAKE_INSTALL_MANDIR}/man5)
endif()
