plugin_option(PLUGIN_MEMORY "Memory usage" ON)

include(CheckIncludeFile)
include(CheckFunctionExists)

set(BUILD_PLUGIN_MEMORY 0)

if(PLUGIN_MEMORY)
    if(BUILD_LINUX)
        set(BUILD_PLUGIN_MEMORY 1)
    elseif(BUILD_BSD)
        if(HAVE_SYSCTL)
            check_include_files("sys/types.h;sys/vmmeter.h" HAVE_SYS_VMMETER_H)
            if(HAVE_SYSCTL AND HAVE_SYS_VMMETER_H)
                set(BUILD_PLUGIN_MEMORY 1)
            else()
                set(BUILD_PLUGIN_MEMORY_REASON "sys/vmmeter.h not found" PARENT_SCOPE)
            endif()
        else()
            set(BUILD_PLUGIN_MEMORY_REASON "sysctl not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_AIX)
        find_package(LibPerfstat)
        if(LIBPERFSTAT_FOUND)
            set(BUILD_PLUGIN_MEMORY 1)
        else()
            set(BUILD_PLUGIN_MEMORY_REASON "perfstat not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_SOLARIS)
        find_package(LibKstat)
        if(LIBKSTAT_FOUND)
            set(BUILD_PLUGIN_MEMORY 1)
        else()
            set(BUILD_PLUGIN_MEMORY_REASON "kstat not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_DARWIN)
        check_function_exists(host_statistics HAVE_HOST_STATISTICS)
        set(BUILD_PLUGIN_MEMORY 1)
    else()
        set(BUILD_PLUGIN_MEMORY_REASON "unsupported system" PARENT_SCOPE)
    endif()
endif()

set(BUILD_PLUGIN_MEMORY ${BUILD_PLUGIN_MEMORY} PARENT_SCOPE)

if(BUILD_PLUGIN_MEMORY)
    set(PLUGIN_MEMORY_SRC memory.c memory.h)
    set(PLUGIN_MEMORY_LIBS libutils libmetric)

    if(BUILD_LINUX)
        list(APPEND PLUGIN_MEMORY_SRC memory_linux.c)
    elseif(BUILD_BSD)
        list(APPEND PLUGIN_MEMORY_DEFINITIONS HAVE_SYSCTL)
        list(APPEND PLUGIN_MEMORY_DEFINITIONS HAVE_SYS_VMMETER_H)
        list(APPEND PLUGIN_MEMORY_SRC memory_bsd.c)
    elseif(BUILD_AIX)
        list(APPEND PLUGIN_MEMORY_SRC memory_aix.c)
        list(APPEND PLUGIN_MEMORY_LIBS LibPerfstat::LibPerfstat)
    elseif(BUILD_SOLARIS)
        list(APPEND PLUGIN_MEMORY_SRC memory_solaris.c)
        list(APPEND PLUGIN_MEMORY_LIBS LibKstat::LibKstat)
    elseif(BUILD_DARWIN)
        if(HAVE_HOST_STATISTICS)
            list(APPEND PLUGIN_MEMORY_DEFINITIONS HAVE_HOST_STATISTICS)
        endif()
        list(APPEND PLUGIN_MEMORY_SRC memory_darwin.c)
    endif()

    add_library(memory MODULE ${PLUGIN_MEMORY_SRC})
    target_link_libraries(memory PRIVATE ${PLUGIN_MEMORY_LIBS})
    target_compile_definitions(memory PUBLIC ${PLUGIN_MEMORY_DEFINITIONS})
    set_target_properties(memory PROPERTIES PREFIX "")

    if(BUILD_LINUX)
        add_executable(test_plugin_memory EXCLUDE_FROM_ALL memory_linux_test.c ${PLUGIN_MEMORY_SRC})
        target_link_libraries(test_plugin_memory libtest libutils libmetric m)
        add_dependencies(build_tests test_plugin_memory)
        add_test(NAME test_plugin_memory COMMAND test_plugin_memory WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
    endif()

    install(TARGETS memory DESTINATION ${CMAKE_INSTALL_LIBDIR}/ncollectd/)
    configure_file(ncollectd-memory.5 ncollectd-memory.5 @ONLY)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ncollectd-memory.5 DESTINATION ${CMAKE_INSTALL_MANDIR}/man5)
endif()
