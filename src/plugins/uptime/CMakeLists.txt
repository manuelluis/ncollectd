plugin_option(PLUGIN_UPTIME "Uptime statistics" ON)

set(BUILD_PLUGIN_UPTIME 0)

if(PLUGIN_UPTIME)
    if(BUILD_LINUX)
        set(BUILD_PLUGIN_UPTIME 1)
    elseif(BUILD_BSD)
        if(HAVE_SYS_SYSCTL_H)
            set(BUILD_PLUGIN_UPTIME 1)
        else()
            set(BUILD_PLUGIN_UPTIME_REASON "sys/sysctl.h not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_AIX)
        find_package(LibPerfstat)
        if(LIBPERFSTAT_FOUND)
            set(BUILD_PLUGIN_UPTIME 1)
        else()
            set(BUILD_PLUGIN_UPTIME_REASON "perstat not found" PARENT_SCOPE)
        endif()
    elseif(BUILD_SOLARIS)
        find_package(LibKstat)
        if(LIBKSTAT_FOUND)
            set(BUILD_PLUGIN_UPTIME 1)
        else()
            set(BUILD_PLUGIN_UPTIME_REASON "kstat not found" PARENT_SCOPE)
        endif()
    else()
        set(BUILD_PLUGIN_UPTIME_REASON "unsupported system" PARENT_SCOPE)
    endif()
endif()

set(BUILD_PLUGIN_UPTIME ${BUILD_PLUGIN_UPTIME} PARENT_SCOPE)

if(BUILD_PLUGIN_UPTIME)
    set(PLUGIN_UPTIME_SRC uptime.c)
    set(PLUGIN_UPTIME_LIBS libutils libmetric)

    if(BUILD_AIX)
        list(APPEND PLUGIN_UPTIME_LIBS LibPerfstat::LibPerfstat)
    elseif(BUILD_SOLARIS)
        list(APPEND PLUGIN_UPTIME_LIBS LibKstat::LibKstat)
    endif()

    add_library(uptime MODULE ${PLUGIN_UPTIME_SRC})
    target_link_libraries(uptime PRIVATE ${PLUGIN_UPTIME_LIBS})
    set_target_properties(uptime PROPERTIES PREFIX "")

#    add_executable(test_plugin_uptime EXCLUDE_FROM_ALL uptime_test.c ${PLUGIN_UPTIME_SRC})
#    target_link_libraries(test_plugin_uptime libtest libutils libmetric -lm)
#    add_dependencies(build_tests test_plugin_uptime)
#    add_test(NAME test_plugin_uptime COMMAND test_plugin_uptime WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})

    install(TARGETS uptime DESTINATION ${CMAKE_INSTALL_LIBDIR}/ncollectd/)
    configure_file(ncollectd-uptime.5 ncollectd-uptime.5 @ONLY)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ncollectd-uptime.5 DESTINATION ${CMAKE_INSTALL_MANDIR}/man5)
endif()
